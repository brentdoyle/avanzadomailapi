FORMAT: 1A
HOST: http://api.avanzadollc.com/

# Avanzado Mail API Documentation
Avanzado powers multi-channel marketing. The Avanzado REST API allows you to:

* Send direct mail to specific EDDM routes
* Get USPS EDDM carrier routes for an address


# Authentication
All requests to Avanzado's Mail REST API require you to authenticate. We support two forms of authentication:

1) Your AccountSid and AuthToken are the "master keys" to your account. To authenticate using these "master keys",
use HTTP basic auth with the username set to your AccountSid and the password set to your AuthToken.
Your AccountSid and AuthToken can be found on your Account Dashboard.

2) (Coming soon) API Keys are credentials you can create and revoke on the website in your Account Dashboard 
(using your "master key" AccountSid and AuthToken). To authenticate using an API Key, use HTTP basic auth with 
the username set to the API Key's Sid and the password set to the API Key's Secret.

Both authentication methods use HTTP basic auth because it is well supported. 
Most HTTP clients (including web-browsers) present a dialog or prompt for you to provide a username and password 
for HTTP basic auth. Most clients will also allow you to provide credentials in the URL.


# Response Codes
Possible GET Response Status Codes

* 200 OK: The request was successful and the response body contains the representation requested.
* 302 FOUND: A common redirect response; you can GET the representation at the URI in the Location response header.
* 304 NOT MODIFIED: Your client's cached version of the representation is still up to date.
* 401 UNAUTHORIZED: The supplied credentials, if any, are not sufficient to access the resource.
* 404 NOT FOUND: Resource was not found or does not exist.
* 429 TOO MANY REQUESTS: Your application is sending too many simultaneous requests.
* 500 SERVER ERROR: We couldn't return the representation due to an internal server error.
* 503 SERVICE UNAVAILABLE: We are temporarily unable to return the representation. Please wait for a bit and try again.

# Custom Field Data Types
**Integer/Number**

Must be whole digits: e.g.
`"integer--Smog-Level": 4`

They can also be specified as strings as long as there is nothing other than the number in the field, e.g.
`"integer--Smog--Level": "Monkey" --- this would cause an error`
`"integer--Smog--Level": "2567" --- this is fine`
`"integer--Smog--Level": "$2567" --- this would cause an error`

Note that passing through null is also acceptable for any kind of field, including numbers. 
This means the field would be considered "blank".

**Floats/Number**

Floats with decimal must be a valid number: e.g.
`"float--Smog--Level": 4.01`

They can also be specified as strings as long as there is nothing other than the number in the field, e.g.
`"integer--Smog--Level": "Monkey" --- this would cause an error`
`"integer--Smog--Level": "2567.58" --- this is fine`
`"integer--Smog--Level": "2567" --- this is also fine`

Note that passing through null is also acceptable for any kind of field, including floats. This means the field 
would be considered "blank".

**Strings**

Strings are pretty straight-forward: e.g. 
`"string--My--String": "Hello how are you going"`

We accept any valid UTF-8 string.

**Dates**

Please see the next section of this document for a full description of dates.

# Date Formats
We accepts dates in the ISO8601 format. Here is a description of the format for dates as 
used in the API taken directly from the standard:


The formats are as follows. 

Exactly the components shown here must be present, with exactly this punctuation. 
Note that the "T" appears literally in the string, to indicate the beginning of the time element, 
as specified in ISO 8601.


`Complete date: YYYY-MM-DD (eg 2018-07-16)`

`Complete date plus hours and minutes: YYYY-MM-DDThh:mmTZD (eg 2018-07-16T19:20+01:00)`

`Complete date plus hours, minutes and seconds: YYYY-MM-DDThh:mm:ssTZD (eg 2018-07-16T19:20:30+01:00)`

`Complete date plus hours, minutes, seconds and a decimal fraction of a second YYYY-MM-DDThh:mm:ss.sTZD (eg 2018-07-16T19:20:30.45+01:00)`

Where:

* YYYY = four-digit year
* MM   = two-digit month (01=January, etc.)
* DD   = two-digit day of month (01 through 31)
* hh   = two digits of hour (00 through 23) (am/pm NOT allowed)
* mm   = two digits of minute (00 through 59)
* ss   = two digits of second (00 through 59)
* s    = one or more digits representing a decimal fraction of a second
* TZD  = time zone designator (Z or +hh:mm or -hh:mm)
     
There are two ways of handling time zone offsets:

Times are expressed in UTC (Coordinated Universal Time), with a special UTC designator ("Z"). 
Times are expressed in local time, together with a time zone offset in hours and minutes. 
A time zone offset of "+hh:mm" indicates that the date/time uses a local time zone which 
is "hh" hours and "mm" minutes ahead of UTC. A time zone offset of "-hh:mm" indicates that 
the date/time uses a local time zone which is "hh" hours and "mm" minutes behind UTC.


Examples of valid dates are:

`"Birthday": "2018-12-01"`

`"Appointment": "2018-10-10T13:50:00Z"`


We also accept dates in simple American format such as:

`"SomeDate":"12/30/2018"`


## Group Routes
Group of all EDDM carrier route-related resources.

## Routes [/v1/routes/{carrier_route}]

The EDDM Route object.

+ Model (application/json)

    + Body
    
                {
                    "usps_route": "48335C037",
                    "zip_code": "48335",
                    "carrier_route": "C037",
                    "counts": {
                        "route_total": 737,
                        "business_total": 75,
                        "residential_total": 662,
                        "residential_counts": {
                            "single_family": 662,
                            "multi_family": 0
                        }
                    },
                    "geocode": {
                        "latitude": 42.4725,
                        "longitude": -83.411411
                    },
                    "geometry": {
                        "type": "MultiPolygon",
                        "coordinates": [
                            [
                                [
                                    [
                                        -83.40714,
                                        42.472035
                                    ],
                                    [
                                        -83.40707,
                                        42.471693
                                    ],
                                    [
                                        -83.407054,
                                        42.471408
                                    ],
                                    [
                                        -83.407028,
                                        42.471025
                                    ],
                                    [
                                        -83.406819,
                                        42.470921
                                    ],
                                    [
                                        -83.406595,
                                        42.470879
                                    ],
                                    [
                                        -83.406636,
                                        42.470782
                                    ],
                                    [
                                        -83.406591,
                                        42.469939
                                    ],
                                    [
                                        -83.408172,
                                        42.469878
                                    ],
                                    [
                                        -83.410078,
                                        42.469845
                                    ],
                                    [
                                        -83.410364,
                                        42.468925
                                    ],
                                    [
                                        -83.411528,
                                        42.468915
                                    ],
                                    [
                                        -83.415243,
                                        42.46883
                                    ],
                                    [
                                        -83.415444,
                                        42.468976
                                    ],
                                    [
                                        -83.415658,
                                        42.473298
                                    ],
                                    [
                                        -83.415733,
                                        42.474614
                                    ],
                                    [
                                        -83.415762,
                                        42.475592
                                    ],
                                    [
                                        -83.415578,
                                        42.47581
                                    ],
                                    [
                                        -83.409521,
                                        42.475968
                                    ],
                                    [
                                        -83.407709,
                                        42.475963
                                    ],
                                    [
                                        -83.407507,
                                        42.474464
                                    ],
                                    [
                                        -83.407162,
                                        42.47447
                                    ],
                                    [
                                        -83.406336,
                                        42.474492
                                    ],
                                    [
                                        -83.406313,
                                        42.473972
                                    ],
                                    [
                                        -83.406281,
                                        42.47353
                                    ],
                                    [
                                        -83.406381,
                                        42.473362
                                    ],
                                    [
                                        -83.406766,
                                        42.473198
                                    ],
                                    [
                                        -83.407266,
                                        42.472965
                                    ],
                                    [
                                        -83.40714,
                                        42.472035
                                    ]
                                ]
                            ]
                        ]
                    },
                    "proximity": {
                    
                    },
                    "household_data": {
                        "household_income": "81246",
                        "household_size": "2.8"
                    }
                }

### Retrieve a single carrier route [GET /v1/routes/{carrier_route}]

+ Parameters
    + carrier_route: 55555R001 (required, string) - USPS route number in form of a string

+ Request
    + Headers

            Authorization: Basic ABC123
          
+ Response 200

    [Routes][]

+ Response 404 (application/json)

        { 
            "error": "Resource not found" 
        }
        
## Routes Collection [/v1/routes]

Get a list of all EDDM routes near a mailing address.

+ Model (application/json)

    + Body

                {
                    "routes": [
                        {
                            "id": "12345678901234567",
                            "proximity": "exact",
                            "carrier_route": "55555R001",
                            "zip_code": "55555",
                            "counts": {
                                "route_total": 655,
                                "business_total": 5
                                "residential_total": 650,
                                "residential_counts": {
                                    "single_family": 630,
                                    "multi_family": 20
                                }
                            },
                            "geocode": {
                                "latitude": 00.000000,
                                "longitude": 00.000000
                            },
                            "household_data": {
                                "household_income": 83158,
                                "household_size": 2.9
                            }
                        },
                        {
                            "id": "23456789012345678",
                            "proximity": "exact",
                            "carrier_route": "R002",
                            "zip_code": "55555",
                            "counts": {
                                "route_total": 530,
                                "business_total": 10
                                "residential_total": 520,
                                "residential_counts": {
                                    "single_family": 510,
                                    "multi_family": 10
                                }
                            },
                            "geocode": {
                                "latitude": 00.000000,
                                "longitude": 00.000000
                            },
                            "household_data": {
                                "household_income": 67032,
                                "household_size": 3.1
                            }
                        }
                    ],
                    "paging": {
                        "total": 2,
                        "page": 1,
                        "pages": 1
                    }
                }

### Retrieve carrier routes using an address [GET /v1/routes?address1={address1}&address2={address2}&city={city}&state={state}&zip={zip}&country={country}]

+ Request (application/json)

    + Headers
    
            Authorization: Basic ABC123

    + Parameters
    
        + address1 (string, required) - The household address 1.
        + address2 (string, required) - The household address 2.
        + city (string, required) - The household city
        + state (string, required) - The household state
        + zip (string, required) - The household zip
        + country (string, required) - The household address country. Default: US

+ Response 200

    [Routes Collection][]
    
    
+ Response 404 (application/json)

        { 
            "error": "Resource not found" 
        }



# Group Orders [/v1/orders/]
Group of all order-related resources.

### Order [/v1/orders/{order_number}]

The Order object.

    + Parameters
        + order_id: 1 (required, string) - ID of the order in form of a string
        

+ Model (application/json)

    + Body

            {
                "order": {
                  "currency": {
                    "name": "US Dollars",
                    "code": "USD",
                    "symbol": "$",
                    "decimal_places": 2
                  },
                  "coupons": [
                    {
                      "id": "1",
                      "code": "abcde1",
                      "display_name": "$5.00 off the order total",
                      "coupon_type": "per_total_discount",
                      "discounted_amount": 5
                    }
                  ],
                  "discounts": [
                    {
                      "name": "Free Shipping",
                      "discounted_amount": 7
                    }
                  ],
                  "line_items": [
                    {
                      "physical_items": [
                        {
                          "id": "8235d47d-718b-4b9c-89a4-5fa1ee76a0b4",
                          "variant_id": 182,
                          "product_id": 118,
                          "name": "BigCommerce Hoodies",
                          "url": "http://your-store.mybigcommerce.com/hoodies/",
                          "quantity": 2,
                          "is_taxable": true,
                          "image_url": "https://cdn8.bigcommerce.com/some-string/themes/ClassicNext/images/ProductDefault.gif",
                          "discounts": [
                            {
                              "name": "Free Shipping",
                              "discountedAmount": 7
                            }
                          ],
                          "discount_amount": 0,
                          "coupon_amount": 0,
                          "list_price": 100,
                          "sale_price": 100,
                          "extended_list_price": 100,
                          "extended_sale_price": 100,
                          "type": "physical",
                          "is_shipping_required": true
                        }
                      ],
                      "digital_items": [
                        {
                          "quantity": 0,
                          "discounts": [
                            {
                              "name": "Free Shipping",
                              "discounted_amount": 7
                            }
                          ],
                          "download_file_urls": []
                        }
                      ],
                      "gift_certificate": [
                        {
                          "type": "giftCertificate"
                        }
                      ]
                    }
                  ],
                  "billingAddress": {
                    "country": "USA",
                    "email": "janedoe@email.com",
                    "firstName": "Jane",
                    "lastName": "Doe",
                    "company": "BigCommerce",
                    "street1": "123 Main Street",
                    "street2": "Apt 1",
                    "city": "Austin",
                    "countryCode": "USA",
                    "postalCode": "12345",
                    "customFields": [
                      {}
                    ]
                  },
                  "status": "INCOMPLETE"
                }
            }

### Get an order [GET /v1/orders/{order_number}]

    + Parameters
        + order_number: 1 (required, string) -  the order number in form of a string
    
+ Response 200

    [Order][]

        
+ Response 400 (application/json)

        { 
            "error": "Resource modification failed"
        }

### Create an order for a postcard mailing [POST /v1/orders/postcards/]

The expected_send_date is a timestamp in ISO 8601 format which specifies a date after 
the current time and up to 45 days (TBD) in the future to send the postcard.

The merge_variables object can gave up to 40 key-value pairs. 
Keys must be at most 40 characters and values must be at most 500 characters.
Neither can contain the characters " and \. Nested objects are not supported.

+ Request (application/json)
    + Headers
    
            Authorization: Basic ABC123
            
    + Body 
    
                {
                    "order": {
                      "currency": {
                        "name": "US Dollars",
                        "code": "USD",
                        "symbol": "$",
                        "decimal_places": 2
                      },
                      "coupons": [
                        {
                          "id": "1",
                          "code": "abcde1",
                          "display_name": "$5.00 off the order total",
                          "coupon_type": "per_total_discount",
                          "discounted_amount": 5
                        }
                      ],
                      "discounts": [
                        {
                          "name": "Free Shipping",
                          "discounted_amount": 7
                        }
                      ],
                      "line_items": [
                        {
                          "physical_items": [
                            {
                              "id": "8235d47d-718b-4b9c-89a4-5fa1ee76a0b4",
                              "variant_id": 182,
                              "product_id": 118,
                              "name": "BigCommerce Hoodies",
                              "url": "http://your-store.mybigcommerce.com/hoodies/",
                              "quantity": 2,
                              "is_taxable": true,
                              "image_url": "https://cdn8.bigcommerce.com/some-string/themes/ClassicNext/images/ProductDefault.gif",
                              "discounts": [
                                {
                                  "name": "Free Shipping",
                                  "discountedAmount": 7
                                }
                              ],
                              "discount_amount": 0,
                              "coupon_amount": 0,
                              "list_price": 100,
                              "sale_price": 100,
                              "extended_list_price": 100,
                              "extended_sale_price": 100,
                              "type": "physical",
                              "is_shipping_required": true
                            }
                          ],
                          "digital_items": [
                            {
                              "quantity": 0,
                              "discounts": [
                                {
                                  "name": "Free Shipping",
                                  "discounted_amount": 7
                                }
                              ],
                              "download_file_urls": []
                            }
                          ],
                          "gift_certificate": [
                            {
                              "type": "giftCertificate"
                            }
                          ]
                        }
                      ],
                      "billingAddress": {
                        "country": "USA",
                        "email": "janedoe@email.com",
                        "firstName": "Jane",
                        "lastName": "Doe",
                        "company": "BigCommerce",
                        "street1": "123 Main Street",
                        "street2": "Apt 1",
                        "city": "Austin",
                        "countryCode": "USA",
                        "postalCode": "12345",
                        "customFields": [
                          {}
                        ]
                      },
                      "status": "INCOMPLETE"
                    }
                }


+ Response 200

            {
                "job_number": "000000987654321"
            }


+ Response 404 (application/json)

        { 
            "error": "Resource not found" 
        }